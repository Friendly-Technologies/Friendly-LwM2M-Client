/*
 * WppLwM2MServer
 * Generated on: 2023-10-11 15:47:20.421450
 * Author: valentin
 * Generated by: Vadimzakreva
 */

#ifndef WPP_LWM2M_SERVER_1_2_H
#define WPP_LWM2M_SERVER_1_2_H

#include "WppLwM2MServerConfig.h"
#include "WppLwM2MServerInfo.h"
#include "Instance.h"
#include "InstSubject.h"

/* --------------- Сode_h block 0 start --------------- */
#include "WppBindings.h"
/* --------------- Сode_h block 0 end --------------- */

namespace wpp {

class WppLwM2MServer : public Instance, public InstSubject<WppLwM2MServer> {
public:
	enum ID: ID_T {
		SHORT_SERVER_ID_0 = 0,
		LIFETIME_1 = 1,
		DEFAULT_MINIMUM_PERIOD_2 = 2,
		DEFAULT_MAXIMUM_PERIOD_3 = 3,
		DISABLE_4 = 4,
		DISABLE_TIMEOUT_5 = 5,
		NOTIFICATION_STORING_WHEN_DISABLED_OR_OFFLINE_6 = 6,
		BINDING_7 = 7,
		REGISTRATION_UPDATE_TRIGGER_8 = 8,
		BOOTSTRAP_REQUEST_TRIGGER_9 = 9,
		APN_LINK_10 = 10,
		TLS_DTLS_ALERT_CODE_11 = 11,
		LAST_BOOTSTRAPPED_12 = 12,
		REGISTRATION_PRIORITY_ORDER_13 = 13,
		INITIAL_REGISTRATION_DELAY_TIMER_14 = 14,
		REGISTRATION_FAILURE_BLOCK_15 = 15,
		BOOTSTRAP_ON_REGISTRATION_FAILURE_16 = 16,
		COMMUNICATION_RETRY_COUNT_17 = 17,
		COMMUNICATION_RETRY_TIMER_18 = 18,
		COMMUNICATION_SEQUENCE_DELAY_TIMER_19 = 19,
		COMMUNICATION_SEQUENCE_RETRY_COUNT_20 = 20,
		TRIGGER_21 = 21,
		PREFERRED_TRANSPORT_22 = 22,
		MUTE_SEND_23 = 23,
		ALTERNATE_APN_LINKS_24 = 24,
		SUPPORTED_SERVER_VERSIONS_25 = 25,
		DEFAULT_NOTIFICATION_MODE_26 = 26,
		PROFILE_ID_HASH_ALGORITHM_27 = 27,
	};

	/* --------------- Code_h block 1 start --------------- */
	/* --------------- Code_h block 1 end --------------- */

public:
	WppLwM2MServer(lwm2m_context_t &context, const OBJ_LINK_T &id);
	~WppLwM2MServer();

	/* --------------- Code_h block 2 start --------------- */
	/* --------------- Code_h block 2 end --------------- */

protected:
	/* --------------- Instance implementation part --------------- */
	/* 
	 * Returns Resource object if it is exist
	 */
	Resource * getResource(ID_T id) override;
	/*
	 * Returns list with available resources
	 */
	std::vector<Resource *> getResourcesList() override;
	std::vector<Resource *> getResourcesList(const ResOp& filter) override;
	/*
	 * Returns list with available instantiated resources
	 */
	std::vector<Resource *> getInstantiatedResourcesList() override;
	std::vector<Resource *> getInstantiatedResourcesList(const ResOp& filter) override;
	/*
	 * Reset all resources values and internal state to default.
	 */
	void setDefaultState() override;
	/*
	 * Handles information about resource operation that made server
	 */
	void serverOperationNotifier(ResOp::TYPE type, const ResLink &resId) override;
	/*
	 * Handles information about resource operation that made user
	 */
	void userOperationNotifier(ResOp::TYPE type, const ResLink &resId) override;

private:
	/* --------------- Class private methods --------------- */
	/*
	 * Initialize resources with default values
	 * Resource always must have at least one instance.
	 */	
	void resourcesInit();
	
	/* --------------- Code_h block 3 start --------------- */
	/* --------------- Code_h block 3 end --------------- */

private:
	std::unordered_map<ID_T, Resource> _resources = {
		// KEY   VALUE
		{SHORT_SERVER_ID_0,                                      {SHORT_SERVER_ID_0,                                      ResOp(ResOp::READ),                     IS_SINGLE::SINGLE,          IS_MANDATORY::MANDATORY,        TYPE_ID::INT }},             
		{LIFETIME_1,                                             {LIFETIME_1,                                             ResOp(ResOp::READ|ResOp::WRITE),        IS_SINGLE::SINGLE,          IS_MANDATORY::MANDATORY,        TYPE_ID::INT }},             
		#if RES_DEFAULT_MINIMUM_PERIOD_1_2                                                                                                                                                                                                                 
		{DEFAULT_MINIMUM_PERIOD_2,                               {DEFAULT_MINIMUM_PERIOD_2,                               ResOp(ResOp::READ|ResOp::WRITE),        IS_SINGLE::SINGLE,          IS_MANDATORY::OPTIONAL,         TYPE_ID::INT }},             
		#endif                                                                                                                                                                                                                                             
		#if RES_DEFAULT_MAXIMUM_PERIOD_1_3                                                                                                                                                                                                                 
		{DEFAULT_MAXIMUM_PERIOD_3,                               {DEFAULT_MAXIMUM_PERIOD_3,                               ResOp(ResOp::READ|ResOp::WRITE),        IS_SINGLE::SINGLE,          IS_MANDATORY::OPTIONAL,         TYPE_ID::INT }},             
		#endif                                                                                                                                                                                                                                             
		#if RES_DISABLE_1_4                                                                                                                                                                                                                                
		{DISABLE_4,                                              {DISABLE_4,                                              ResOp(ResOp::EXECUTE),                  IS_SINGLE::SINGLE,          IS_MANDATORY::OPTIONAL,         TYPE_ID::EXECUTE }},         
		#endif                                                                                                                                                                                                                                             
		#if RES_DISABLE_TIMEOUT_1_5                                                                                                                                                                                                                        
		{DISABLE_TIMEOUT_5,                                      {DISABLE_TIMEOUT_5,                                      ResOp(ResOp::READ|ResOp::WRITE),        IS_SINGLE::SINGLE,          IS_MANDATORY::OPTIONAL,         TYPE_ID::INT }},             
		#endif                                                                                                                                                                                                                                             
		{NOTIFICATION_STORING_WHEN_DISABLED_OR_OFFLINE_6,        {NOTIFICATION_STORING_WHEN_DISABLED_OR_OFFLINE_6,        ResOp(ResOp::READ|ResOp::WRITE),        IS_SINGLE::SINGLE,          IS_MANDATORY::MANDATORY,        TYPE_ID::BOOL }},            
		{BINDING_7,                                              {BINDING_7,                                              ResOp(ResOp::READ|ResOp::WRITE),        IS_SINGLE::SINGLE,          IS_MANDATORY::MANDATORY,        TYPE_ID::STRING }},          
		{REGISTRATION_UPDATE_TRIGGER_8,                          {REGISTRATION_UPDATE_TRIGGER_8,                          ResOp(ResOp::EXECUTE),                  IS_SINGLE::SINGLE,          IS_MANDATORY::MANDATORY,        TYPE_ID::EXECUTE }},         
		#if RES_BOOTSTRAP_REQUEST_TRIGGER_1_9                                                                                                                                                                                                              
		{BOOTSTRAP_REQUEST_TRIGGER_9,                            {BOOTSTRAP_REQUEST_TRIGGER_9,                            ResOp(ResOp::EXECUTE),                  IS_SINGLE::SINGLE,          IS_MANDATORY::OPTIONAL,         TYPE_ID::EXECUTE }},         
		#endif                                                                                                                                                                                                                                             
		#if RES_APN_LINK_1_10                                                                                                                                                                                                                              
		{APN_LINK_10,                                            {APN_LINK_10,                                            ResOp(ResOp::READ|ResOp::WRITE),        IS_SINGLE::SINGLE,          IS_MANDATORY::OPTIONAL,         TYPE_ID::OBJ_LINK }},        
		#endif                                                                                                                                                                                                                                             
		#if RES_TLS_DTLS_ALERT_CODE_1_11                                                                                                                                                                                                                   
		{TLS_DTLS_ALERT_CODE_11,                                 {TLS_DTLS_ALERT_CODE_11,                                 ResOp(ResOp::READ),                     IS_SINGLE::SINGLE,          IS_MANDATORY::OPTIONAL,         TYPE_ID::UINT }},            
		#endif                                                                                                                                                                                                                                             
		#if RES_LAST_BOOTSTRAPPED_1_12                                                                                                                                                                                                                     
		{LAST_BOOTSTRAPPED_12,                                   {LAST_BOOTSTRAPPED_12,                                   ResOp(ResOp::READ),                     IS_SINGLE::SINGLE,          IS_MANDATORY::OPTIONAL,         TYPE_ID::TIME }},            
		#endif                                                                                                                                                                                                                                             
		#if RES_REGISTRATION_PRIORITY_ORDER_1_13                                                                                                                                                                                                           
		{REGISTRATION_PRIORITY_ORDER_13,                         {REGISTRATION_PRIORITY_ORDER_13,                         ResOp(ResOp::READ),                     IS_SINGLE::SINGLE,          IS_MANDATORY::OPTIONAL,         TYPE_ID::UINT }},            
		#endif                                                                                                                                                                                                                                             
		#if RES_INITIAL_REGISTRATION_DELAY_TIMER_1_14                                                                                                                                                                                                      
		{INITIAL_REGISTRATION_DELAY_TIMER_14,                    {INITIAL_REGISTRATION_DELAY_TIMER_14,                    ResOp(ResOp::READ|ResOp::WRITE),        IS_SINGLE::SINGLE,          IS_MANDATORY::OPTIONAL,         TYPE_ID::UINT }},            
		#endif                                                                                                                                                                                                                                             
		#if RES_REGISTRATION_FAILURE_BLOCK_1_15                                                                                                                                                                                                            
		{REGISTRATION_FAILURE_BLOCK_15,                          {REGISTRATION_FAILURE_BLOCK_15,                          ResOp(ResOp::READ),                     IS_SINGLE::SINGLE,          IS_MANDATORY::OPTIONAL,         TYPE_ID::BOOL }},            
		#endif                                                                                                                                                                                                                                             
		#if RES_BOOTSTRAP_ON_REGISTRATION_FAILURE_1_16                                                                                                                                                                                                     
		{BOOTSTRAP_ON_REGISTRATION_FAILURE_16,                   {BOOTSTRAP_ON_REGISTRATION_FAILURE_16,                   ResOp(ResOp::READ),                     IS_SINGLE::SINGLE,          IS_MANDATORY::OPTIONAL,         TYPE_ID::BOOL }},            
		#endif                                                                                                                                                                                                                                             
		#if RES_COMMUNICATION_RETRY_COUNT_1_17                                                                                                                                                                                                             
		{COMMUNICATION_RETRY_COUNT_17,                           {COMMUNICATION_RETRY_COUNT_17,                           ResOp(ResOp::READ|ResOp::WRITE),        IS_SINGLE::SINGLE,          IS_MANDATORY::OPTIONAL,         TYPE_ID::UINT }},            
		#endif                                                                                                                                                                                                                                             
		#if RES_COMMUNICATION_RETRY_TIMER_1_18                                                                                                                                                                                                             
		{COMMUNICATION_RETRY_TIMER_18,                           {COMMUNICATION_RETRY_TIMER_18,                           ResOp(ResOp::READ|ResOp::WRITE),        IS_SINGLE::SINGLE,          IS_MANDATORY::OPTIONAL,         TYPE_ID::UINT }},            
		#endif                                                                                                                                                                                                                                             
		#if RES_COMMUNICATION_SEQUENCE_DELAY_TIMER_1_19                                                                                                                                                                                                    
		{COMMUNICATION_SEQUENCE_DELAY_TIMER_19,                  {COMMUNICATION_SEQUENCE_DELAY_TIMER_19,                  ResOp(ResOp::READ|ResOp::WRITE),        IS_SINGLE::SINGLE,          IS_MANDATORY::OPTIONAL,         TYPE_ID::UINT }},            
		#endif                                                                                                                                                                                                                                             
		#if RES_COMMUNICATION_SEQUENCE_RETRY_COUNT_1_20                                                                                                                                                                                                    
		{COMMUNICATION_SEQUENCE_RETRY_COUNT_20,                  {COMMUNICATION_SEQUENCE_RETRY_COUNT_20,                  ResOp(ResOp::READ|ResOp::WRITE),        IS_SINGLE::SINGLE,          IS_MANDATORY::OPTIONAL,         TYPE_ID::UINT }},            
		#endif                                                                                                                                                                                                                                             
		#if RES_TRIGGER_1_21                                                                                                                                                                                                                               
		{TRIGGER_21,                                             {TRIGGER_21,                                             ResOp(ResOp::READ|ResOp::WRITE),        IS_SINGLE::SINGLE,          IS_MANDATORY::OPTIONAL,         TYPE_ID::BOOL }},            
		#endif                                                                                                                                                                                                                                             
		#if RES_PREFERRED_TRANSPORT_1_22                                                                                                                                                                                                                   
		{PREFERRED_TRANSPORT_22,                                 {PREFERRED_TRANSPORT_22,                                 ResOp(ResOp::READ|ResOp::WRITE),        IS_SINGLE::SINGLE,          IS_MANDATORY::OPTIONAL,         TYPE_ID::STRING }},          
		#endif                                                                                                                                                                                                                                             
		#if RES_MUTE_SEND_1_23                                                                                                                                                                                                                             
		{MUTE_SEND_23,                                           {MUTE_SEND_23,                                           ResOp(ResOp::READ|ResOp::WRITE),        IS_SINGLE::SINGLE,          IS_MANDATORY::OPTIONAL,         TYPE_ID::BOOL }},            
		#endif                                                                                                                                                                                                                                             
		#if RES_ALTERNATE_APN_LINKS_1_24                                                                                                                                                                                                                   
		{ALTERNATE_APN_LINKS_24,                                 {ALTERNATE_APN_LINKS_24,                                 ResOp(ResOp::READ|ResOp::WRITE),        IS_SINGLE::MULTIPLE,        IS_MANDATORY::OPTIONAL,         TYPE_ID::OBJ_LINK }},        
		#endif                                                                                                                                                                                                                                             
		#if RES_SUPPORTED_SERVER_VERSIONS_1_25                                                                                                                                                                                                             
		{SUPPORTED_SERVER_VERSIONS_25,                           {SUPPORTED_SERVER_VERSIONS_25,                           ResOp(ResOp::READ|ResOp::WRITE),        IS_SINGLE::MULTIPLE,        IS_MANDATORY::OPTIONAL,         TYPE_ID::STRING }},          
		#endif                                                                                                                                                                                                                                             
		#if RES_DEFAULT_NOTIFICATION_MODE_1_26                                                                                                                                                                                                             
		{DEFAULT_NOTIFICATION_MODE_26,                           {DEFAULT_NOTIFICATION_MODE_26,                           ResOp(ResOp::READ|ResOp::WRITE),        IS_SINGLE::SINGLE,          IS_MANDATORY::OPTIONAL,         TYPE_ID::INT }},             
		#endif                                                                                                                                                                                                                                             
		#if RES_PROFILE_ID_HASH_ALGORITHM_1_27                                                                                                                                                                                                             
		{PROFILE_ID_HASH_ALGORITHM_27,                           {PROFILE_ID_HASH_ALGORITHM_27,                           ResOp(ResOp::READ|ResOp::WRITE),        IS_SINGLE::SINGLE,          IS_MANDATORY::OPTIONAL,         TYPE_ID::UINT }},            
		#endif                                                                                                                                                                                                                                             
	};

	/* --------------- Code_h block 4 start --------------- */
	/* --------------- Code_h block 4 end --------------- */
};

} /* namespace wpp */

#endif /* WPP_LWM2M_SERVER_1_2_H */
